#!/bin/sh

# Test if root/sudo or this won't work
if [ "$(whoami)" != "root" ];
then
    echo "You don't have sufficient privileges to run this script."
    exit 1
fi

# Assure that the backups are intact and working on this server
echo "Making sure the backups are intact and working on this server."
tarsnap --fsck

# Get list of running containers and stop them
echo "Stopping containers to prevent issues with write/read lock files."
CONTAINERS=$(docker.io ps -q)
docker.io stop $CONTAINERS

# Backup and delete the mnt folder we are trying to restore
echo "Backup old mnt data to '/home/isaac/backups/' and delete '/mnt'."
cd /
tar zcf mnt-backup.tar.gz mnt
mkdir -p /home/isaac/backups/
mv mnt-backup.tar.gz /home/isaac/backups/
rm -rf mnt

# Find the latest backup on tarsnap
echo "Finding the latest backup."
AGO=0
LATEST=$(tarsnap --list-archives | grep docker-mnt-manual)
while [ "$LATEST" = "" ]
do
    LATEST=$(tarsnap --list-archives | grep docker-mnt-`/bin/date --date="$AGO days ago" +%F`)
    AGO=$(($AGO + 1))
done

# Restore mnt folder, if a manual backup was used delete it
echo "Restoring $LATEST"
tarsnap -x -f $LATEST mnt
if [ "$LATEST" = "docker-mnt-manual" ]
then
    echo "Deleting the manual backup made because it was used to migrate to"
    echo "this server and we don't want to restore from it on accident in the"
    echo "future."
    tarsnap -d -f docker-mnt-manual
fi
echo "Starting back up stopped containers."
docker.io start $CONTAINERS
echo "Done."
